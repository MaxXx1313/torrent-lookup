Ideas to implement:
---

- refactoring of data folder. reuse cache

+ use nice glob

* create autodetect for tlookup-* clients:
  * which transmission-gtk / where ping (https://superuser.com/questions/207707/what-is-windows-equivalent-of-the-which-command-in-unix-is-there-an-equivale)

- create autodetect for tlookup-* clients:
- which transmission-gtk / where ping (https://superuser.com/questions/207707/what-is-windows-equivalent-of-the-which-command-in-unix-is-there-an-equivale)

- check on mac
- check on linux
- check on windows


prerelease:
- 'man' file? (https://docs.npmjs.com/files/package.json#man)

- check torrent push
  - make nice exceptions for all cases when push fails

---

file moves:
+ rename: scan->find, all->scan
+ make scan + analyzer
- add: detect command

+ restructure the app: "dist/lib" + 'op', utils


+ make tlookup-transmission
+ read tlookup-* for help
+ create "main": "dist/lib.js",
  + export TorrentPusher

+ create bugs repo and fill package.json : "bugs"
+ create repo (repository field)
+ add '#!/usr/bin/env node'
+ set windows path for temp directory (in constants)
